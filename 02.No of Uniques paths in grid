-----------------------------------------solution 1:Top to bottom
class Solution {
    public int uniquePaths(int n, int m) {
         HashMap<String, Long> map = new HashMap<>();
         return((int)f(n,m,map));
    }
    public static long f(long n,long m,HashMap<String, Long> map){
        String s=n+","+m;
        if(map.containsKey(s)){return(map.get(s));}
        if(n==1 && m==1){return(1);}
        if(n==0 || m==0){return(0);}
        map.put(s,f(n-1,m,map)+f(n,m-1,map));
        return(map.get(s));
    }
}
-----------------------------------------solution 2:tabulation
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] dp=new int[m+1][n+1];
        for(int i=0;i<=m;i++){
            for(int j=0;j<=n;j++){
                if(i==0 ||j==0){continue;}
                else if(i==1 && j==1){
                    dp[i][j]=1;
                }
                else{
                    dp[i][j]=dp[i-1][j]+dp[i][j-1];
                }
            }
        }
        return(dp[m][n]);
    }
}
